legend("topleft", legend = paste("h2 =",format(lm.wings.scaled$coefficients[2],digits=2),format(lm.wings.scaled$coefficients[1],digits=2)),bty="n")
#EXERCISE VI.2
owls.in.ghillie<-read.table("Koskenpato_etal_data_citizen_science.csv",sep=",",header=T)
str(owls.in.ghillie)
owls.in.snow <- subset(owls.in.ghillie, Snow=="TRUE")
owl.table<-xtabs(~Found+Colour,owls.in.snow)
owl.table
chisq.test(owl.table)
owl.chisq.result<-chisq.test(owl.table)
str(owl.chisq.result)
owl.chisq.result$statistic
owl.chisq.result$parameter
owl.chisq.result$p.value
owl.plot <- barplot(owl.table,beside=T,ylab="Number found or not found",xlab="Morph",ylim=c(0,10000),col=c("red4","red4","Grey40","Grey40"))
text(owl.plot,1,rownames(owl.table),col=c("White","White","Black","Black"))
mtext(paste("X-sq =",format(owl.chisq.result$statistic,digits=2),"df =",owl.chisq.result$parameter,
"p =",format(owl.chisq.result$p.value,digits=2)))
owl.chisq.result$observed
owl.chisq.result$expected
owl.chisq.result$residuals
#Exercise VI.3
growth.data<-read.table("Growthdata.csv",sep=",",header=T)
str(growth.data)
summary(growth.data)
#import and check
boxplot(growth~treat, growth.data)
stripchart(growth~treat, growth.data,method="jitter")
#graphical check
ttest.growth<-t.test(growth~treat,growth.data)
#ttest
boxplot(growth~treat, growth.data,ylab="Growth",xlab="Treatment",col=c("lightblue","green3"))
mtext(paste("t =",format(ttest.growth$statistic,digits=2)
,"df =",format(ttest.growth$parameter,digits=2)
,"p =",format(ttest.growth$p.value,digits=2)))
stripchart(growth~treat, growth.data,method="jitter",ylab="Treatment",xlab="Growth",col=c("lightblue","green3"))
mtext(paste("t =",format(ttest.growth$statistic,digits=2)
,"df =",format(ttest.growth$parameter,digits=2)
,"p =",format(ttest.growth$p.value,digits=2)))
#nice graphical plotting
barplot(growth.data$growth,axes=F)
#EXERCISE VI.4
data("ChickWeight")
str(ChickWeight)
finalweight<-subset(ChickWeight,Time==21)
stripchart(weight~Diet,finalweight,method="jitter",col=c("yellow4","blue","red","green3"))
chick.lm<-lm(weight~Diet,finalweight)
summary(chick.lm)
plot(chick.lm)
,"df2 =",format(anova.chick[2,1],digits=2)
#EXERCISE VI.5
tree.data<-read.table("TreeData.csv",sep=",",header=T)
str(tree.data)
plot(weight~Diet,finalweight)
mtext(paste("f =",format(anova.chick[1,4],digits=2)
,"df1 =",format(anova.chick[1,1],digits=2)
,"df2 =",format(anova.chick[2,1],digits=2)
,"p =",format(anova.chick[1,5],digits=2)))
chick.lm<-lm(weight~Diet,finalweight)
summary(chick.lm)
plot(chick.lm)
anova.chick<-anova(chick.lm)
plot(weight~Diet,finalweight)
mtext(paste("f =",format(anova.chick[1,4],digits=2)
,"df1 =",format(anova.chick[1,1],digits=2)
,"df2 =",format(anova.chick[2,1],digits=2)
,"p =",format(anova.chick[1,5],digits=2)))
#EXERCISE VI.5
tree.data<-read.table("TreeData.csv",sep=",",header=T)
str(tree.data)
stripchart(Volume~habitat,data=tree.data,method="jitter",col=c("yellow2","grey40"))
boxplot(Volume~habitat,data=tree.data,method="jitter",col=c("yellow2","grey40"))
t.test(Volume~habitat,tree.data)
lm.tree<-lm(Volume~habitat+Girth,tree.data)
summary(lm.tree)
plot(lm.tree)
lm.tree.anova<-anova(lm.tree)
str(lm.tree.anova)
summary(lm.tree.anova)
plot(Volume~Girth,tree.data,col=c("grey40","yellow3")[as.factor(tree.data$habitat)],pch=18,ylim=c(0,80),xlim=c(5,25))
tree.data$predictions<-predict(lm.tree)
lines(predictions~Girth,data = subset(tree.data,habitat=="shady"),col="grey40")
lines(predictions~Girth,data = subset(tree.data,habitat=="sunny"),col="yellow3")
abline(v=mean(tree.data$Girth),lty="dashed")
mtext(paste("f =",format(lm.tree.anova[1,4],digits=2)
,"df1 =",format(lm.tree.anova[1,1],digits=2)
,"df2 =",format(lm.tree.anova[3,1],digits=2)
,"p =",format(lm.tree.anova[1,5],digits=2)))
#EXERCISES VII
#Exercise VII.1
library(readxl)
garden<-read_excel("garden.xlsx")
garden$start_yearF<-as.factor(garden$start_year)
ggplot(garden, aes(y=quality,x=weed_area,col=start_yearF))+geom_point()
#Exercise III.3
#You learn from Wikipedia (https://en.wikipedia.org/wiki/Standard_error) that the standard error is defined as the standard deviation divided by the square root of the sample size.
#NE: calc.SE<-function(x) {sd(x)/sqrt(length(x))}
calc.SE<-function(x, na.rm=FALSE){sum(sd(x,na.rm=na.rm))/sqrt(length(na.omit(x)))}
calc.SE(1:10)
calc.SE(c(1:10,NA))
calc.SE(c(1:10,NA),na.rm = TRUE)
#function to calc Standard Error
df.year<-data.frame(Year=c(rep(1,5),rep(2,5)), Response=c(4.256898,  7.103097,  5.345175,  3.259264,  4.327387,  9.995211, 8.621862, 10.499859,10.032349,  8.821877))
aggregate(Response~Year,df.year,sd)
aggregate(Response~Year,df.year,mean)
aggregate(Response~Year,df.year,calc.SE)
tapply(df.year$Response,df.year$Year,sd)
tapply(df.year$Response,df.year$Year,mean)
tapply(df.year$Response,df.year$Year,calc.SE)
df.year<-rbind(df.year, data.frame(Year=c(rep(1,2),rep(2,2)), Response=c(4.33,  NA,  10.1,  NA)))
aggregate(Response~Year,df.year,sd)
extrojka1<-aggregate(Response~Year,df.year,length)
extrojka2<-aggregate(Response~Year,df.year,mean)
extrojka3<-aggregate(Response~Year,df.year,calc.SE)
tapply(df.year$Response,df.year$Year,function(x) sum(complete.cases(x)))
tapply(df.year$Response,df.year$Year,sd,na.rm = TRUE)
tapply(df.year$Response,df.year$Year,mean,na.rm = TRUE)
tapply(df.year$Response,df.year$Year,calc.SE,na.rm = TRUE)
extrojka.df<-data.frame(Year=unique(df.year$Year),n=extrojka1[,2],mean=round(extrojka2[,2],2),SE=round(extrojka3[,2],2))
write.table(extrojka.df, "extrojka.doc", quote=F, row.names = F, sep=";")
df.withNA<-data.frame(Trial=1:10, Experiment=c(rep("control",5),rep("treatment",5)),Measure=c(1,3,4,NA,3,4,5,NA,8,9))
df.withNA<-data.frame(df.withNA,Measure2=c(2,3,2,3,4,5,4,5,6,6),block=rep(c("B1","B2"),5))
aggregate(df.withNA,block~Experiment,function (df.withNA) length(unique(df.withNA)))
descriptiveStats.df.withNA<-aggregate(Measure~Experiment+block,df.withNA,mean)
names(descriptiveStats.df.withNA)[3]<-'mean'
descriptiveStats.df.withNA<-data.frame(descriptiveStats.df.withNA, n=aggregate(Measure~Experiment+block,df.withNA,length)$Measure)
descriptiveStats.df.withNA<-data.frame(descriptiveStats.df.withNA, sd=aggregate(Measure~Experiment+block,df.withNA,sd)$Measure)
View(descriptiveStats.df.withNA)
descriptiveStats2.df.withNA<-aggregate(Measure2~Experiment+block,df.withNA,mean)
names(descriptiveStats2.df.withNA)[3]<-'mean'
descriptiveStats2.df.withNA<-data.frame(descriptiveStats2.df.withNA, n=aggregate(Measure2~Experiment+block,df.withNA,length)$Measure2)
descriptiveStats2.df.withNA<-data.frame(descriptiveStats2.df.withNA, sd=aggregate(Measure2~Experiment+block,df.withNA,sd)$Measure2)
View(descriptiveStats2.df.withNA)
#descriptiveStats_comp<-aggregate(cbind(Measure,Measure2)~Experiment+block,df.withNA,mean)
#names(descriptiveStats_comp)[3]<-"mean1"
#names(descriptiveStats_comp)[4]<-"mean2"
#descriptiveStats_comp<-data.frame(descriptiveStats_comp, n1 = aggregate(cbind(Measure,Measure2)~Experiment+block,df.withNA,length)$Measure)
#descriptiveStats_comp<-data.frame(descriptiveStats_comp, n2 = aggregate(cbind(Measure,Measure2)~Experiment+block,df.withNA,length)$Measure)
#descriptiveStats_comp<-data.frame(descriptiveStats_comp, sd1 = aggregate(cbind(Measure,Measure2)~Experiment+block,df.withNA,sd)$Measure1)
#descriptiveStats_comp<-data.frame(descriptiveStats_comp, sd2 = aggregate(cbind(Measure,Measure2)~Experiment+block,df.withNA,sd)$Measure2)
#multiple lines
descriptiveStats_comp<-aggregate(cbind(Measure,Measure2)~Experiment+block, df.withNA, function(x) c(n=length(x),mean=mean(x),sd=sd(x)))
View(descriptiveStats2.df.withNA)
View(descriptiveStats_comp)
View(df.withNA)
aggregate(df.withNA,block~Experiment,function (df.withNA) length(unique(df.withNA)))
#Exercise VII.5
library(readxl)
library(ggplot2)
fruit.taste<-read_excel("Fruit_tasting_data_2018.xlsx")
str(fruit.taste)
zkouska<-lm(Score2~Score1+Fruit,fruit.taste)
summary(zkouska)
ggplot(fruit.taste, aes(y=Score2,x=Score1,col=Fruit))+
geom_point(size=2)+stat_smooth(method="lm",formula=y~x,se=TRUE)+
theme_bw()
summary(zkouska)
View(fruit.taste)
zkouska<-lm(Score2~Score1+factor(apple) * factor(strawberry),fruit.taste)
zkouska<-lm(Score2~Score1+factor("apple") * factor("strawberry"),fruit.taste)
zkouska<-lm(Score2~Score1+Fruit("apple") * factor("strawberry"),fruit.taste)
zkouska<-lm(Score2~Score1+Fruit("apple") * Fruit("strawberry"),fruit.taste)
zkouska<-lm(Score2~Score1+factor(Fruit),fruit.taste)
summary(zkouska)
zkouska<-lm(Score2~Score1+Fruit,fruit.taste)
hm<-glht(zkouska, linfct = mcp(Fruit="strawberry"))
zkouska<-lm(Score2~Score1+Fruit["strawberry"]*Fruit["apple"],fruit.taste)
zkouska<-lm(Score2~Score1+factor(Fruit["strawberry"])*factor(Fruit["apple"]),fruit.taste)
source("C:/Users/Client/Desktop/Ostatní/Škola/University of Turku/R/kompendium_onlyexercises_TK.R", echo=TRUE)
zkouska<-lm(Score2~Score1+factor(strawberry)*factor(apple),fruit.taste)
#Exercise VII.5
library(readxl)
library(ggplot2)
fruit.taste<-read_excel("Fruit_tasting_data_2018.xlsx")
str(fruit.taste)
linear.fruit<-lm(Score2~Score1+Fruit+Score1*Fruit,fruit.taste)
summary(linear.fruit)
anova(linear.fruit)
ggplot(fruit.taste, aes(y=Score2,x=Score1,col=Fruit))+
geom_point(size=4)+stat_smooth(method="lm",formula=y~x,se=TRUE)+
theme_classic()
ggplot(garden, aes(y=quality,x=weed_area,col=start_yearF))+geom_point()
garden<-read_excel("garden.xlsx")
garden$start_yearF<-as.factor(garden$start_year)
ggplot(garden, aes(y=weed_area,x=quality,col=start_yearF))+geom_point()
garden<-read_excel("garden.xlsx")
garden$locationF<-as.factor(garden$location)
ggplot(garden, aes(y=locationF,x=econ_box,fill=locationF))+
geom_boxplot()
ggplot(garden, aes(y=econ_box,x=locationF,fill=locationF))+
geom_boxplot()
#•	First add the basic components and save the plot
ggplot(garden, aes(y=econ_box,x=locationF,fill=locationF))+
geom_boxplot(outlier.shape=NA)
#•	Make a boxplot but remove the outliers from the plot
ggplot(garden, aes(y=econ_box,x=locationF,fill=locationF))+
geom_boxplot(outlier.shape=NA)+xlim(0,50)
#•	Change that the axis for economic value ranges from 0 to 50
ggplot(garden, aes(y=econ_box,x=locationF,fill=locationF))+
geom_boxplot(outlier.shape=NA)+ylim(0,50)+theme_bw()
#•	Change that the axis for economic value ranges from 0 to 50
ggplot(garden, aes(y=econ_box,x=locationF,fill=locationF))+
geom_boxplot(outlier.shape=NA)+ylim(0,50)+theme_bw()
#•	Modify the background theme so that it is white
ggplot(garden, aes(y=locationF,x=econ_box,fill=locationF))+
geom_boxplot(outlier.shape=NA)+ylim(0,50)+theme_bw()+
scale_fill_manual(values=c("brown","orange","yellow"),name = "Location")
#•	Modify the background theme so that it is white
ggplot(garden, aes(y=locationF,x=econ_box,fill=locationF))+
geom_boxplot(outlier.shape=NA)+ylim(0,50)+theme_bw()+
scale_fill_manual(values=c("brown","orange","yellow"),name = "Location")
#•	Modify the background theme so that it is white
ggplot(garden, aes(y=econ_box,x=locationF,fill=locationF))+
geom_boxplot(outlier.shape=NA)+ylim(0,50)+theme_bw()+
scale_fill_manual(values=c("brown","orange","yellow"),name = "Location")
#•	Change the coloration of the bars to your taste and add a legend title
ggplot(garden, aes(y=econ_box,x=locationF,fill=locationF))+
geom_boxplot(outlier.shape=NA)+ylim(0,50)+theme_bw()+
scale_fill_manual(values=c("brown","orange","yellow"),name = "Location")+
coord_flip()
#•	Flip the plot so that the location is on y-axis and economic value is on x-axis
ggplot(garden, aes(y=econ_box,x=locationF,fill=locationF))+
geom_boxplot(outlier.shape=NA)+ylim(0,50)+theme_bw()+
scale_fill_manual(values=c("brown","orange","yellow"),name = "Location")+
coord_flip()+labs(x="economic value per box (€)",y="Location", title="Mean economic value and gardening location")
#•	Change the x & y -axis labels and add a title for your plot
ggplot(garden, aes(y=econ_box,x=locationF,fill=locationF))+
geom_boxplot(outlier.shape=NA)+ylim(0,50)+theme_bw()+
scale_fill_manual(values=c("brown","orange","yellow"),name = "Location")+
coord_flip()+labs(x="Location",y="economic value per box (€)", title="Mean economic value and gardening location")+
theme(plot.title=element_text(size=20),
axis.title.y=element_text(size=15),
axis.title.x=element_text(size=15),
legend.title =element_text(size=15))
#•	Flip the plot so that the location is on y-axis and economic value is on x-axis
ggplot(garden, aes(y=econ_box,x=locationF,fill=locationF))+
geom_boxplot(outlier.shape=NA)+ylim(0,50)+theme_bw()+
scale_fill_manual(values=c("brown","orange","yellow"),name = "Location")+
coord_flip()+labs(x="economic value per box (€)",y="Location", title="Mean economic value and gardening location")
#•	Change the x & y -axis labels and add a title for your plot
ggplot(garden, aes(y=econ_box,x=locationF,fill=locationF))+
geom_boxplot(outlier.shape=NA)+ylim(0,50)+theme_bw()+
scale_fill_manual(values=c("brown","orange","yellow"),name = "Location")+
coord_flip()+labs(x="Location",y="economic value per box (€)", title="Mean economic value and gardening location")+
theme(plot.title=element_text(size=20),
axis.title.y=element_text(size=15),
axis.title.x=element_text(size=15),
legend.title =element_text(size=15))
#•	Flip the plot so that the location is on y-axis and economic value is on x-axis
ggplot(garden, aes(y=econ_box,x=locationF,fill=locationF))+
geom_boxplot(outlier.shape=NA)+ylim(0,50)+theme_bw()+
scale_fill_manual(values=c("brown","orange","yellow"),name = "Location")+
coord_flip()+labs(y="economic value per box (€)",x="Location", title="Mean economic value and gardening location")
#•	Change the x & y -axis labels and add a title for your plot
ggplot(garden, aes(y=econ_box,x=locationF,fill=locationF))+
geom_boxplot(outlier.shape=NA)+ylim(0,50)+theme_bw()+
scale_fill_manual(values=c("brown","orange","yellow"),name = "Location")+
coord_flip()+labs(x="Location",y="economic value per box (€)", title="Mean economic value and gardening location")+
theme(plot.title=element_text(size=20),
axis.title.y=element_text(size=15),
axis.title.x=element_text(size=15),
legend.title =element_text(size=15))
#EXERCISE VI.2
owls.in.ghillie<-read.table("Koskenpato_etal_data_citizen_science.csv",sep=",",header=T)
str(owls.in.ghillie)
ucast.na.ritualu<-matrix(c(1,2,3,4),3)
View(ucast.na.ritualu)
View(ucast.na.ritualu)
View(ucast.na.ritualu)
matrix(c(1,2,3,4),2)
c(1,2,6,7,10,205050600)
matrix(c(1,2,3,4),2,2)
matrix(c(1,2,3,4),2,3)
matrix(c(1,2,3,4),3,3)
matrix(c(1,2,3,4),2,2)
matrix(c(1,2,3,4),2,2)
matrix(c(1,2,3,4),3,2)
matrix(c(1,2,3,4),2,3)
matrix(c(1,2,3,4),4,4)
matrix(c(1,2,3,4),4,4)
matrix(c("prvni","druhy","treti","ctvrty"),4,4)
matrix(c("prvni","druhy","treti","ctvrty"),4,4)
matrix(c("prvni","druhy","treti","ctvrty"),2,2)
participanti<-c("karel","klára","lucie","izák")
víra<-c("protestant","muslim","zid","ukko")
ucast<-c(1,5,2,9)
ucast.na.ritualu<-matrix(participanti,ucast,víra)
View(ucast.na.ritualu)
ucast.na.ritualu<-matrix(participanti,ucast,víra)
ucast.na.ritualu<-data.frame(participanti,ucast,víra)
View(ucast.na.ritualu)
víra<-c("protestant","muslim","zid","ukkonosko")
ucast.na.ritualu<-data.frame(participanti,ucast,víra)
víra<-c("protestant","muslim","zid","ukkonosko")
ucast.na.ritualu<-data.frame(participanti,ucast,víra)
participanti<-c("karel","klara","lucie","izak")
víra<-c("protestant","islam","judaismus","ukkonosko")
ucast.na.ritualu<-data.frame(participanti,ucast,víra)
víra<-c("protestant","islam","judaismus","ukonusku")
ucast.na.ritualu<-data.frame(participanti,ucast,víra)
víra<-c("protestant","islam","judaismus","ukonusko")
ucast.na.ritualu<-data.frame(participanti,ucast,víra)
View(ucast.na.ritualu)
getwd()
getwd()
owls.in.ghillie<-read.table("Koskenpato_etal_data_citizen_science.csv",sep=",",header=T)
View(owls.in.ghillie)
read.table?
owls.in.ghillie<-read.table("Koskenpato_etal_data_citizen_science.csv",sep=",",header=T)
matrix(c("prvni","druhy","treti","ctvrty"),2,2)
?read.table
?read.table
str(owls.in.ghillie)
owls.in.snow <- subset(owls.in.ghillie, Snow=="TRUE")
View(owls.in.snow)
owl.table<-xtabs(~Found+Colour,owls.in.snow)
owl.table
owl.table<-xtabs(Found+Colour,owls.in.snow)
owl.table<-xtabs(~Found+Colour,owls.in.snow)
owl.table
owl.table
owl.table
chisq.test(owl.table)
#0.00000000000000022%
owl.chisq.result<-chisq.test(owl.table)
View(owl.chisq.result)
str(owl.chisq.result)
owl.chisq.result$statistic
owl.chisq.result$parameter
owl.chisq.result$p.value
owl.plot <- barplot(owl.table,beside=T,ylab="Number found or not found",xlab="Morph",ylim=c(0,10000),col=c("red4","red4","Grey40","Grey40"))
owl.plot <- barplot(owl.table,beside=T,ylab="Number found or not found",xlab="Morph",ylim=c(0,1000000),col=c("red4","red4","Grey40","Grey40"))
owl.plot <- barplot(owl.table,beside=T,ylab="Number found or not found",xlab="Morph",ylim=c(0,100000),col=c("red4","red4","Grey40","Grey40"))
owl.plot <- barplot(owl.table,beside=T,ylab="Number found or not found",xlab="Morph",ylim=c(0,10000),col=c("red4","red4","Grey40","Grey40"))
text(owl.plot,1,rownames(owl.table),col=c("White","White","Black","Black"))
text(owl.plot,2,rownames(owl.table),col=c("White","White","Black","Black"))
text(owl.plot,2,rownames(owl.table),col=c("White","White","Black","Black"))
text(owl.plot,5,rownames(owl.table),col=c("White","White","Black","Black"))
text(owl.plot,1,rownames(owl.table),col=c("White","White","Black","Black"))
owl.plot <- barplot(owl.table,beside=T,ylab="Number found or not found",xlab="Morph",ylim=c(0,10000),col=c("red4","red4","Grey40","Grey40"))
text(owl.plot,1,rownames(owl.table),col=c("White","White","Black","Black"))
mtext(paste("X-sq =",format(owl.chisq.result$statistic,digits=2),"df =",owl.chisq.result$parameter,
"p =",format(owl.chisq.result$p.value,digits=2)))
owl.chisq.result$observed
owl.chisq.result$expected
owl.chisq.result$residuals
owl.chisq.result$observed
owl.chisq.result$expected
owl.chisq.result$observed
owl.chisq.result$expected
owl.chisq.result$observed
owl.chisq.result$expected
owl.chisq.result$residuals
owl.chisq.result$parameter
owl.chisq.result$statistic
str(owl.chisq.result)
chisq.test(owl.table)
#making a table
?chisq.test
owl.chisq.result$statistic
curve(predict(owl.chisq.result, data.frame(IQ=x), type="resp"), add=TRUE)
curve(predict(owl.chisq.result, data.frame(owl.chisq.result=x), type="resp"), add=TRUE)
#just owls in snow
pairs(owls.in.snow[2:9])
#INFERENČNÍ STATISTIKA - T-TEST
growth.data<-read.table("Growthdata.csv",sep=",",header=T)
str(growth.data)
View(growth.data)
summary(growth.data)
#import and check
boxplot(growth~treat, growth.data)
stripchart(growth~treat, growth.data,method="jitter")
#graphical check
ttest.growth<-t.test(growth~treat,growth.data)
View(ttest.growth)
#ttest
boxplot(growth~treat, growth.data,ylab="Growth",xlab="Treatment",col=c("lightblue","green3"))
mtext(paste("t =",format(ttest.growth$statistic,digits=2)
,"df =",format(ttest.growth$parameter,digits=2)
,"p =",format(ttest.growth$p.value,digits=2)))
stripchart(growth~treat, growth.data,method="jitter",ylab="Treatment",xlab="Growth",col=c("lightblue","green3"))
mtext(paste("t =",format(ttest.growth$statistic,digits=2)
,"df =",format(ttest.growth$parameter,digits=2)
,"p =",format(ttest.growth$p.value,digits=2)))
#nice graphical plotting
barplot(growth.data$growth,axes=F)
#INFERENČNÍ STATISTIKA - T-TEST
growth.data<-read.table("Growthdata.csv",sep=",",header=T)
str(growth.data)
summary(growth.data)
#import and check
boxplot(growth~treat, growth.data)
stripchart(growth~treat, growth.data,method="jitter")
#graphical check
ttest.growth<-t.test(growth~treat,growth.data)
t.test(growth~treat,growth.data)
#import and check
boxplot(growth~treat, growth.data)
stripchart(growth~treat, growth.data,method="jitter")
#ttest
boxplot(growth~treat, growth.data,ylab="Growth",xlab="Treatment",col=c("lightblue","green3"))
mtext(paste("t =",format(ttest.growth$statistic,digits=2)
,"df =",format(ttest.growth$parameter,digits=2)
,"p =",format(ttest.growth$p.value,digits=2)))
stripchart(growth~treat, growth.data,method="jitter",ylab="Treatment",xlab="Growth",col=c("lightblue","green3"))
mtext(paste("t =",format(ttest.growth$statistic,digits=2)
,"df =",format(ttest.growth$parameter,digits=2)
,"p =",format(ttest.growth$p.value,digits=2)))
e
#graphical check
ttest.growth<-t.test(growth~treat,growth.data)
View(ttest.growth)
getwd()
mujprvnivektor<-c(1,2,3,4)
mujprvnimatrix<-(c(mujprvnivektor),2,2)
mujprvnimatrix<-(c(mujprvnivektor),2)
mujprvnimatrix<-matrix(c(mujprvnivektor),2,2)
View(mujprvnimatrix)
mujprvnimatrix<-matrix(c(mujprvnivektor),2,3)
mujprvnimatrix<-matrix(c(mujprvnivektor),3,2)
mujprvnimatrix<-matrix(c(1,2,3,4),3,2)
mujprvnimatrix<-matrix(c(mujprvnivektor),3,2)
ucast<-c(1,5,2,9)
vira<-c("protestant","islam","judaismus","ukonusko")
ucast.na.ritualu<-data.frame(participanti,ucast,vira)
#ZÁKLADY
participanti<-c("karel","klara","lucie","izak")
ucast<-c(1,5,2,9)
vira<-c("protestant","islam","judaismus","ukonusko")
ucast.na.ritualu<-data.frame(participanti,ucast,vira)
View(ucast.na.ritualu)
#CHI-square test
owls.in.ghillie<-read.table("Koskenpato_etal_data_citizen_science.csv",sep=",",header=T)
View(owls.in.ghillie)
str(owls.in.ghillie)
owls.in.snow <- subset(owls.in.ghillie, Snow=="TRUE")
View(ucast.na.ritualu)
View(owls.in.snow)
View(owls.in.snow)
owl.table<-xtabs(~Found+Colour,owls.in.snow)
owl.table<-xtabs(~Found+Colour,owls.in.snow)
owl.table
chisq.test(owl.table)
#making a table
?chisq.test
#0.00000000000000022%
owl.chisq.result<-chisq.test(owl.table)
View(owl.chisq.result)
str(owl.chisq.result)
owl.chisq.result$statistic
owl.chisq.result$parameter
owl.chisq.result$p.value
owl.plot <- barplot(owl.table,beside=T,ylab="Number found or not found",xlab="Morph",ylim=c(0,10000),col=c("red4","red4","Grey40","Grey40"))
text(owl.plot,1,rownames(owl.table),col=c("White","White","Black","Black"))
mtext(paste("X-sq =",format(owl.chisq.result$statistic,digits=2),"df =",owl.chisq.result$parameter,
"p =",format(owl.chisq.result$p.value,digits=2)))
owl.chisq.result$observed
owl.chisq.result$observed
owl.chisq.result$expected
owl.chisq.result$residuals
owl.chisq.result$statistic
MyDirectory <- "C:/Users/Client/Desktop/Ostatn?/Skola/University of Turku/R"
setwd(MyDirectory)
MyDirectory <- "C:/Users/Client/Desktop/Ostatní/Skola/University of Turku/R"
setwd(MyDirectory)
TurkuDirectory<-'\\\\utuhome.utu.fi\\tokypt\\R'
setwd(TurkuDirectory)
#zmena ?loziste
getwd()
#EXERCISE VI.2
owls.in.ghillie<-read.table("Koskenpato_etal_data_citizen_science.csv",sep=",",header=T)
View(owls.in.ghillie)
str(owls.in.ghillie)
owls.in.snow <- subset(owls.in.ghillie, Snow=="TRUE")
View(owls.in.snow)
owl.table<-xtabs(~Found+Colour,owls.in.snow)
owl.table
str(owl.chisq.result)
owl.chisq.result<-chisq.test(owl.table)
str(owl.chisq.result)
owl.chisq.result$p.value
owl.plot <- barplot(owl.table,beside=T,ylab="Number found or not found",xlab="Morph",ylim=c(0,10000),col=c("red4","red4","Grey40","Grey40"))
text(owl.plot,1,rownames(owl.table),col=c("White","White","Black","Black"))
#using the table for the chisq test and extracting values
?str()
mtext(paste("X-sq =",format(owl.chisq.result$statistic,digits=2),"df =",owl.chisq.result$parameter,
"p =",format(owl.chisq.result$p.value,digits=2)))
owl.chisq.result$observed
owl.chisq.result$expected
owl.chisq.result$residuals
#Exercise VI.3
growth.data<-read.table("Growthdata.csv",sep=",",header=T)
str(growth.data)
summary(growth.data)
#import and check
boxplot(growth~treat, growth.data)
stripchart(growth~treat, growth.data,method="jitter")
#graphical check
ttest.growth<-t.test(growth~treat,growth.data)
#ttest
boxplot(growth~treat, growth.data,ylab="Growth",xlab="Treatment",col=c("lightblue","green3"))
stripchart(growth~treat, growth.data,method="jitter",ylab="Treatment",xlab="Growth",col=c("lightblue","green3"))
mtext(paste("t =",format(ttest.growth$statistic,digits=2)
,"df =",format(ttest.growth$parameter,digits=2)
,"p =",format(ttest.growth$p.value,digits=2)))
mtext(paste("t =",format(ttest.growth$statistic,digits=2)
,"df =",format(ttest.growth$parameter,digits=2)
,"p =",format(ttest.growth$p.value,digits=2)))
stripchart(growth~treat, growth.data,method="jitter",ylab="Treatment",xlab="Growth",col=c("lightblue","green3"))
mtext(paste("t =",format(ttest.growth$statistic,digits=2)
,"df =",format(ttest.growth$parameter,digits=2)
,"p =",format(ttest.growth$p.value,digits=2)))
abline(lm.wings.scaled$coefficients)
